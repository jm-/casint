// word list
if (O == 0)
{
    I = Intg(500 * RandNum());
    if (I == 0) { W = 2765900; }
    if (I == 1) { W = 8143861; }
    if (I == 2) { W = 1391337; }
    if (I == 3) { W = 8978444; }
    if (I == 4) { W = 2768043; }
    if (I == 5) { W = 2524729; }
    if (I == 6) { W = 2096615; }
    if (I == 7) { W = 8148349; }
    if (I == 8) { W = 6030675; }
    if (I == 9) { W = 1701601; }
    if (I == 10) { W = 8260448; }
    if (I == 11) { W = 3823643; }
    if (I == 12) { W = 8315366; }
    if (I == 13) { W = 1126013; }
    if (I == 14) { W = 2158843; }
    if (I == 15) { W = 3746579; }
    if (I == 16) { W = 1187621; }
    if (I == 17) { W = 8904124; }
    if (I == 18) { W = 502834; }
    if (I == 19) { W = 8319728; }
    if (I == 20) { W = 671756; }
    if (I == 21) { W = 1688326; }
    if (I == 22) { W = 8138852; }
    if (I == 23) { W = 8995578; }
    if (I == 24) { W = 1995213; }
    if (I == 25) { W = 2158706; }
    if (I == 26) { W = 5515333; }
    if (I == 27) { W = 7480764; }
    if (I == 28) { W = 9936895; }
    if (I == 29) { W = 9040310; }
    if (I == 30) { W = 7462733; }
    if (I == 31) { W = 2150680; }
    if (I == 32) { W = 10079568; }
    if (I == 33) { W = 1244900; }
    if (I == 34) { W = 3753235; }
    if (I == 35) { W = 2145558; }
    if (I == 36) { W = 3419930; }
    if (I == 37) { W = 3296415; }
    if (I == 38) { W = 3123528; }
    if (I == 39) { W = 1596407; }
    if (I == 40) { W = 1231364; }
    if (I == 41) { W = 9456810; }
    if (I == 42) { W = 8141392; }
    if (I == 43) { W = 7335660; }
    if (I == 44) { W = 708286; }
    if (I == 45) { W = 1995759; }
    if (I == 46) { W = 9134674; }
    if (I == 47) { W = 3525380; }
    if (I == 48) { W = 5572449; }
    if (I == 49) { W = 9286583; }
    if (I == 50) { W = 5971939; }
    if (I == 51) { W = 1005393; }
    if (I == 52) { W = 8967472; }
    if (I == 53) { W = 3744941; }
    if (I == 54) { W = 8939236; }
    if (I == 55) { W = 9459298; }
    if (I == 56) { W = 7588354; }
    if (I == 57) { W = 3516124; }
    if (I == 58) { W = 9170485; }
    if (I == 59) { W = 2631719; }
    if (I == 60) { W = 3222829; }
    if (I == 61) { W = 537856; }
    if (I == 62) { W = 749325; }
    if (I == 63) { W = 1688549; }
    if (I == 64) { W = 10320103; }
    if (I == 65) { W = 9286684; }
    if (I == 66) { W = 2842397; }
    if (I == 67) { W = 2677734; }
    if (I == 68) { W = 2154736; }
    if (I == 69) { W = 2953917; }
    if (I == 70) { W = 6042236; }
    if (I == 71) { W = 1233834; }
    if (I == 72) { W = 1467247; }
    if (I == 73) { W = 3525952; }
    if (I == 74) { W = 1697949; }
    if (I == 75) { W = 8321797; }
    if (I == 76) { W = 9290767; }
    if (I == 77) { W = 5967965; }
    if (I == 78) { W = 1125649; }
    if (I == 79) { W = 1512700; }
    if (I == 80) { W = 10322395; }
    if (I == 81) { W = 8745818; }
    if (I == 82) { W = 750764; }
    if (I == 83) { W = 2713302; }
    if (I == 84) { W = 9550221; }
    if (I == 85) { W = 1188433; }
    if (I == 86) { W = 4430353; }
    if (I == 87) { W = 9961684; }
    if (I == 88) { W = 10541692; }
    if (I == 89) { W = 9040532; }
    if (I == 90) { W = 1512693; }
    if (I == 91) { W = 2909590; }
    if (I == 92) { W = 1517936; }
    if (I == 93) { W = 5572750; }
    if (I == 94) { W = 1512596; }
    if (I == 95) { W = 2145369; }
    if (I == 96) { W = 9462055; }
    if (I == 97) { W = 3521420; }
    if (I == 98) { W = 3369712; }
    if (I == 99) { W = 1398363; }
    if (I == 100) { W = 6101383; }
    if (I == 101) { W = 8396744; }
    if (I == 102) { W = 5514641; }
    if (I == 103) { W = 6501429; }
    if (I == 104) { W = 9415837; }
    if (I == 105) { W = 936402; }
    if (I == 106) { W = 3229771; }
    if (I == 107) { W = 3419941; }
    if (I == 108) { W = 1927128; }
    if (I == 109) { W = 1688148; }
    if (I == 110) { W = 568989; }
    if (I == 111) { W = 2161320; }
    if (I == 112) { W = 8141619; }
    if (I == 113) { W = 6111864; }
    if (I == 114) { W = 1917702; }
    if (I == 115) { W = 8323065; }
    if (I == 116) { W = 8245892; }
    if (I == 117) { W = 5291365; }
    if (I == 118) { W = 2967466; }
    if (I == 119) { W = 3069045; }
    if (I == 120) { W = 752049; }
    if (I == 121) { W = 3062106; }
    if (I == 122) { W = 1693890; }
    if (I == 123) { W = 2909652; }
    if (I == 124) { W = 2916412; }
    if (I == 125) { W = 1188260; }
    if (I == 126) { W = 9292449; }
    if (I == 127) { W = 6670122; }
    if (I == 128) { W = 4359893; }
    if (I == 129) { W = 9044293; }
    if (I == 130) { W = 8974301; }
    if (I == 131) { W = 3007562; }
    if (I == 132) { W = 2710572; }
    if (I == 133) { W = 2001108; }
    if (I == 134) { W = 4732181; }
    if (I == 135) { W = 8894634; }
    if (I == 136) { W = 10319178; }
    if (I == 137) { W = 7523442; }
    if (I == 138) { W = 10654482; }
    if (I == 139) { W = 9037590; }
    if (I == 140) { W = 3525906; }
    if (I == 141) { W = 1688341; }
    if (I == 142) { W = 1852083; }
    if (I == 143) { W = 6219006; }
    if (I == 144) { W = 3516453; }
    if (I == 145) { W = 1704632; }
    if (I == 146) { W = 8747999; }
    if (I == 147) { W = 6219023; }
    if (I == 148) { W = 9935996; }
    if (I == 149) { W = 884922; }
    if (I == 150) { W = 9457066; }
    if (I == 151) { W = 8877081; }
    if (I == 152) { W = 1917850; }
    if (I == 153) { W = 3744892; }
    if (I == 154) { W = 2844756; }
    if (I == 155) { W = 7486263; }
    if (I == 156) { W = 5656916; }
    if (I == 157) { W = 1401165; }
    if (I == 158) { W = 8318884; }
    if (I == 159) { W = 9292855; }
    if (I == 160) { W = 4605613; }
    if (I == 161) { W = 2707712; }
    if (I == 162) { W = 2953533; }
    if (I == 163) { W = 1125883; }
    if (I == 164) { W = 3926046; }
    if (I == 165) { W = 2845432; }
    if (I == 166) { W = 5965432; }
    if (I == 167) { W = 9044685; }
    if (I == 168) { W = 10678225; }
    if (I == 169) { W = 1403023; }
    if (I == 170) { W = 3064632; }
    if (I == 171) { W = 502845; }
    if (I == 172) { W = 5650938; }
    if (I == 173) { W = 10530363; }
    if (I == 174) { W = 8703161; }
    if (I == 175) { W = 1398006; }
    if (I == 176) { W = 3516052; }
    if (I == 177) { W = 3068748; }
    if (I == 178) { W = 9470612; }
    if (I == 179) { W = 2000153; }
    if (I == 180) { W = 2720693; }
    if (I == 181) { W = 8141561; }
    if (I == 182) { W = 9166757; }
    if (I == 183) { W = 3472741; }
    if (I == 184) { W = 8138689; }
    if (I == 185) { W = 8824119; }
    if (I == 186) { W = 2908515; }
    if (I == 187) { W = 9462029; }
    if (I == 188) { W = 5276314; }
    if (I == 189) { W = 829030; }
    if (I == 190) { W = 4244333; }
    if (I == 191) { W = 10657302; }
    if (I == 192) { W = 1592546; }
    if (I == 193) { W = 1289448; }
    if (I == 194) { W = 8251593; }
    if (I == 195) { W = 8882126; }
    if (I == 196) { W = 862402; }
    if (I == 197) { W = 8714681; }
    if (I == 198) { W = 1752789; }
    if (I == 199) { W = 1085384; }
    if (I == 200) { W = 3525902; }
    if (I == 201) { W = 8826856; }
    if (I == 202) { W = 785925; }
    if (I == 203) { W = 1189810; }
    if (I == 204) { W = 10827581; }
    if (I == 205) { W = 8974296; }
    if (I == 206) { W = 2316120; }
    if (I == 207) { W = 7528746; }
    if (I == 208) { W = 8786120; }
    if (I == 209) { W = 9058095; }
    if (I == 210) { W = 8714399; }
    if (I == 211) { W = 6428122; }
    if (I == 212) { W = 492893; }
    if (I == 213) { W = 3574328; }
    if (I == 214) { W = 1011382; }
    if (I == 215) { W = 7486166; }
    if (I == 216) { W = 778627; }
    if (I == 217) { W = 10533160; }
    if (I == 218) { W = 8256429; }
    if (I == 219) { W = 8829412; }
    if (I == 220) { W = 9161333; }
    if (I == 221) { W = 5862037; }
    if (I == 222) { W = 7590952; }
    if (I == 223) { W = 7629035; }
    if (I == 224) { W = 1002980; }
    if (I == 225) { W = 5861740; }
    if (I == 226) { W = 8833702; }
    if (I == 227) { W = 11702764; }
    if (I == 228) { W = 9093356; }
    if (I == 229) { W = 1236909; }
    if (I == 230) { W = 7483553; }
    if (I == 231) { W = 1518104; }
    if (I == 232) { W = 1240854; }
    if (I == 233) { W = 7462753; }
    if (I == 234) { W = 7412875; }
    if (I == 235) { W = 1512535; }
    if (I == 236) { W = 1919988; }
    if (I == 237) { W = 8745885; }
    if (I == 238) { W = 8899883; }
    if (I == 239) { W = 6040923; }
    if (I == 240) { W = 3581307; }
    if (I == 241) { W = 8773168; }
    if (I == 242) { W = 9228569; }
    if (I == 243) { W = 3290591; }
    if (I == 244) { W = 1236493; }
    if (I == 245) { W = 8252795; }
    if (I == 246) { W = 9470598; }
    if (I == 247) { W = 10782916; }
    if (I == 248) { W = 1192105; }
    if (I == 249) { W = 10672328; }
    if (I == 250) { W = 5862358; }
    if (I == 251) { W = 8715589; }
    if (I == 252) { W = 8837732; }
    if (I == 253) { W = 7149613; }
    if (I == 254) { W = 2675316; }
    if (I == 255) { W = 6317982; }
    if (I == 256) { W = 7634421; }
    if (I == 257) { W = 2210155; }
    if (I == 258) { W = 1517941; }
    if (I == 259) { W = 5576531; }
    if (I == 260) { W = 8914456; }
    if (I == 261) { W = 10532228; }
    if (I == 262) { W = 1649185; }
    if (I == 263) { W = 3744836; }
    if (I == 264) { W = 8746022; }
    if (I == 265) { W = 1538662; }
    if (I == 266) { W = 7579155; }
    if (I == 267) { W = 10153707; }
    if (I == 268) { W = 7682301; }
    if (I == 269) { W = 5960775; }
    if (I == 270) { W = 2206229; }
    if (I == 271) { W = 8929595; }
    if (I == 272) { W = 9300446; }
    if (I == 273) { W = 744647; }
    if (I == 274) { W = 2967339; }
    if (I == 275) { W = 7474739; }
    if (I == 276) { W = 9286587; }
    if (I == 277) { W = 5967119; }
    if (I == 278) { W = 2953690; }
    if (I == 279) { W = 1125915; }
    if (I == 280) { W = 3477140; }
    if (I == 281) { W = 6214320; }
    if (I == 282) { W = 1541359; }
    if (I == 283) { W = 9230233; }
    if (I == 284) { W = 5866197; }
    if (I == 285) { W = 678204; }
    if (I == 286) { W = 7589820; }
    if (I == 287) { W = 4367110; }
    if (I == 288) { W = 9063995; }
    if (I == 289) { W = 1752691; }
    if (I == 290) { W = 2903736; }
    if (I == 291) { W = 1917180; }
    if (I == 292) { W = 10657509; }
    if (I == 293) { W = 3420461; }
    if (I == 294) { W = 8954534; }
    if (I == 295) { W = 3296649; }
    if (I == 296) { W = 1002637; }
    if (I == 297) { W = 940003; }
    if (I == 298) { W = 1517963; }
    if (I == 299) { W = 2212022; }
    if (I == 300) { W = 7634202; }
    if (I == 301) { W = 6108881; }
    if (I == 302) { W = 3059243; }
    if (I == 303) { W = 10214505; }
    if (I == 304) { W = 8328871; }
    if (I == 305) { W = 1240751; }
    if (I == 306) { W = 1231573; }
    if (I == 307) { W = 8324406; }
    if (I == 308) { W = 8745728; }
    if (I == 309) { W = 6497841; }
    if (I == 310) { W = 5763237; }
    if (I == 311) { W = 9090216; }
    if (I == 312) { W = 506823; }
    if (I == 313) { W = 3679961; }
    if (I == 314) { W = 4372851; }
    if (I == 315) { W = 8504904; }
    if (I == 316) { W = 686653; }
    if (I == 317) { W = 1925747; }
    if (I == 318) { W = 3688400; }
    if (I == 319) { W = 1697473; }
    if (I == 320) { W = 10788600; }
    if (I == 321) { W = 2761101; }
    if (I == 322) { W = 2154989; }
    if (I == 323) { W = 2576322; }
    if (I == 324) { W = 2773497; }
    if (I == 325) { W = 2967489; }
    if (I == 326) { W = 1512684; }
    if (I == 327) { W = 939112; }
    if (I == 328) { W = 3929320; }
    if (I == 329) { W = 1006812; }
    if (I == 330) { W = 674033; }
    if (I == 331) { W = 8970155; }
    if (I == 332) { W = 3750286; }
    if (I == 333) { W = 10788652; }
    if (I == 334) { W = 5968136; }
    if (I == 335) { W = 1285939; }
    if (I == 336) { W = 5971607; }
    if (I == 337) { W = 8974388; }
    if (I == 338) { W = 3290403; }
    if (I == 339) { W = 3521652; }
    if (I == 340) { W = 4841849; }
    if (I == 341) { W = 1288097; }
    if (I == 342) { W = 8833661; }
    if (I == 343) { W = 4466565; }
    if (I == 344) { W = 8899903; }
    if (I == 345) { W = 9044495; }
    if (I == 346) { W = 3368351; }
    if (I == 347) { W = 2161509; }
    if (I == 348) { W = 8964545; }
    if (I == 349) { W = 8314942; }
    if (I == 350) { W = 8837437; }
    if (I == 351) { W = 4034257; }
    if (I == 352) { W = 1233730; }
    if (I == 353) { W = 1236461; }
    if (I == 354) { W = 1299675; }
    if (I == 355) { W = 8833765; }
    if (I == 356) { W = 8826678; }
    if (I == 357) { W = 9473302; }
    if (I == 358) { W = 1014528; }
    if (I == 359) { W = 2307505; }
    if (I == 360) { W = 7589538; }
    if (I == 361) { W = 3233456; }
    if (I == 362) { W = 5514956; }
    if (I == 363) { W = 7400652; }
    if (I == 364) { W = 8929764; }
    if (I == 365) { W = 9034978; }
    if (I == 366) { W = 10499327; }
    if (I == 367) { W = 10076331; }
    if (I == 368) { W = 10216634; }
    if (I == 369) { W = 9044441; }
    if (I == 370) { W = 9035213; }
    if (I == 371) { W = 5751953; }
    if (I == 372) { W = 8321611; }
    if (I == 373) { W = 9844905; }
    if (I == 374) { W = 8967464; }
    if (I == 375) { W = 8912032; }
    if (I == 376) { W = 4840984; }
    if (I == 377) { W = 8970213; }
    if (I == 378) { W = 2109264; }
    if (I == 379) { W = 844570; }
    if (I == 380) { W = 8780387; }
    if (I == 381) { W = 6846276; }
    if (I == 382) { W = 8777189; }
    if (I == 383) { W = 5760344; }
    if (I == 384) { W = 3685993; }
    if (I == 385) { W = 10228024; }
    if (I == 386) { W = 3061738; }
    if (I == 387) { W = 9412807; }
    if (I == 388) { W = 9035219; }
    if (I == 389) { W = 2154925; }
    if (I == 390) { W = 1526086; }
    if (I == 391) { W = 7588248; }
    if (I == 392) { W = 1191198; }
    if (I == 393) { W = 8829709; }
    if (I == 394) { W = 6565573; }
    if (I == 395) { W = 2721232; }
    if (I == 396) { W = 2918317; }
    if (I == 397) { W = 2843821; }
    if (I == 398) { W = 8826850; }
    if (I == 399) { W = 8917433; }
    if (I == 400) { W = 10786784; }
    if (I == 401) { W = 7343231; }
    if (I == 402) { W = 4033930; }
    if (I == 403) { W = 9060063; }
    if (I == 404) { W = 2958941; }
    if (I == 405) { W = 3684641; }
    if (I == 406) { W = 3525761; }
    if (I == 407) { W = 3687052; }
    if (I == 408) { W = 674168; }
    if (I == 409) { W = 7638623; }
    if (I == 410) { W = 2602423; }
    if (I == 411) { W = 1517985; }
    if (I == 412) { W = 9240789; }
    if (I == 413) { W = 8929530; }
    if (I == 414) { W = 8745781; }
    if (I == 415) { W = 2963421; }
    if (I == 416) { W = 8974146; }
    if (I == 417) { W = 1131323; }
    if (I == 418) { W = 8947684; }
    if (I == 419) { W = 947205; }
    if (I == 420) { W = 8326540; }
    if (I == 421) { W = 8908154; }
    if (I == 422) { W = 7523458; }
    if (I == 423) { W = 3686054; }
    if (I == 424) { W = 3682977; }
    if (I == 425) { W = 1295553; }
    if (I == 426) { W = 2514290; }
    if (I == 427) { W = 1918305; }
    if (I == 428) { W = 8896977; }
    if (I == 429) { W = 708089; }
    if (I == 430) { W = 7523573; }
    if (I == 431) { W = 6879796; }
    if (I == 432) { W = 7332025; }
    if (I == 433) { W = 7683623; }
    if (I == 434) { W = 1925136; }
    if (I == 435) { W = 1649584; }
    if (I == 436) { W = 2953819; }
    if (I == 437) { W = 7343257; }
    if (I == 438) { W = 2672337; }
    if (I == 439) { W = 9173033; }
    if (I == 440) { W = 3410893; }
    if (I == 441) { W = 1649588; }
    if (I == 442) { W = 9462497; }
    if (I == 443) { W = 8708809; }
    if (I == 444) { W = 6430254; }
    if (I == 445) { W = 1691190; }
    if (I == 446) { W = 9040472; }
    if (I == 447) { W = 3518730; }
    if (I == 448) { W = 3372032; }
    if (I == 449) { W = 10652206; }
    if (I == 450) { W = 1016846; }
    if (I == 451) { W = 6430150; }
    if (I == 452) { W = 2094435; }
    if (I == 453) { W = 493303; }
    if (I == 454) { W = 3455379; }
    if (I == 455) { W = 8904002; }
    if (I == 456) { W = 5195565; }
    if (I == 457) { W = 6031509; }
    if (I == 458) { W = 3934143; }
    if (I == 459) { W = 2205449; }
    if (I == 460) { W = 9037692; }
    if (I == 461) { W = 8964909; }
    if (I == 462) { W = 3018189; }
    if (I == 463) { W = 8960908; }
    if (I == 464) { W = 2544957; }
    if (I == 465) { W = 6312377; }
    if (I == 466) { W = 2484671; }
    if (I == 467) { W = 854026; }
    if (I == 468) { W = 1697525; }
    if (I == 469) { W = 6667887; }
    if (I == 470) { W = 10541630; }
    if (I == 471) { W = 3416212; }
    if (I == 472) { W = 6769651; }
    if (I == 473) { W = 1285881; }
    if (I == 474) { W = 10222620; }
    if (I == 475) { W = 2953787; }
    if (I == 476) { W = 9158525; }
    if (I == 477) { W = 8942966; }
    if (I == 478) { W = 5652950; }
    if (I == 479) { W = 8853040; }
    if (I == 480) { W = 7485082; }
    if (I == 481) { W = 3525743; }
    if (I == 482) { W = 6845580; }
    if (I == 483) { W = 5276512; }
    if (I == 484) { W = 798509; }
    if (I == 485) { W = 2597906; }
    if (I == 486) { W = 5515674; }
    if (I == 487) { W = 747787; }
    if (I == 488) { W = 8917641; }
    if (I == 489) { W = 2839283; }
    if (I == 490) { W = 9237272; }
    if (I == 491) { W = 3574121; }
    if (I == 492) { W = 2959223; }
    if (I == 493) { W = 9415893; }
    if (I == 494) { W = 1917863; }
    if (I == 495) { W = 1596170; }
    if (I == 496) { W = 8833915; }
    if (I == 497) { W = 3231285; }
    if (I == 498) { W = 9063956; }
    if (I == 499) { W = 10213728; }
    return;
}

// translate key to letter
if (O == 1) {
    L = 0;
    if (K == 76) { L = 1; }
    if (K == 66) { L = 2; }
    if (K == 56) { L = 3; }
    if (K == 46) { L = 4; }
    if (K == 36) { L = 5; }
    if (K == 26) { L = 6; }
    if (K == 75) { L = 7; }
    if (K == 65) { L = 8; }
    if (K == 55) { L = 9; }
    if (K == 45) { L = 10; }
    if (K == 35) { L = 11; }
    if (K == 25) { L = 12; }
    if (K == 74) { L = 13; }
    if (K == 64) { L = 14; }
    if (K == 54) { L = 15; }
    if (K == 73) { L = 16; }
    if (K == 63) { L = 17; }
    if (K == 53) { L = 18; }
    if (K == 43) { L = 19; }
    if (K == 33) { L = 20; }
    if (K == 72) { L = 21; }
    if (K == 62) { L = 22; }
    if (K == 52) { L = 23; }
    if (K == 42) { L = 24; }
    if (K == 32) { L = 25; }
    if (K == 71) { L = 26; }
    return;
}

// extract the solution word to Mat G [1, *]
if (O == 2)
{
    T = W;                      // set T
    for (B = 1 to 5)
    {
        S = 26 ** (5 - B);      // divisor
        L = Intg(T / S);        // get the letter
        T = T - S * L;          // update T
        Mat G [1, B] = L;       // store the letter
    }
    return;
}

// print the letter L at X, Y
if (O == 3)
{
    if (L == 1) { Text(Y, X + 1, "A"); }
    if (L == 2) { Text(Y, X + 1, "B"); }
    if (L == 3) { Text(Y, X + 1, "C"); }
    if (L == 4) { Text(Y, X + 1, "D"); }
    if (L == 5) { Text(Y, X + 1, "E"); }
    if (L == 6) { Text(Y, X + 1, "F"); }
    if (L == 7) { Text(Y, X + 1, "G"); }
    if (L == 8) { Text(Y, X + 1, "H"); }
    if (L == 9) { Text(Y, X + 1, "I"); }
    if (L == 10) { Text(Y, X + 1, "J"); }
    if (L == 11) { Text(Y, X + 1, "K"); }
    if (L == 12) { Text(Y, X + 1, "L"); }
    if (L == 13) { Text(Y, X, "M"); }
    if (L == 14) { Text(Y, X, "N"); }
    if (L == 15) { Text(Y, X + 1, "O"); }
    if (L == 16) { Text(Y, X + 1, "P"); }
    if (L == 17) { Text(Y, X, "Q"); }
    if (L == 18) { Text(Y, X + 1, "R"); }
    if (L == 19) { Text(Y, X + 1, "S"); }
    if (L == 20) { Text(Y, X + 1, "T"); }
    if (L == 21) { Text(Y, X + 1, "U"); }
    if (L == 22) { Text(Y, X + 1, "V"); }
    if (L == 23) { Text(Y, X, "W"); }
    if (L == 24) { Text(Y, X + 1, "X"); }
    if (L == 25) { Text(Y, X + 1, "Y"); }
    if (L == 26) { Text(Y, X + 1, "Z"); }
    return;
}

// score the current word
if (O == 4)
{
    S = 0;
    // zero out scores
    for (B = 1 to 5)
    {
        Mat G [3, B] = 0;
    }
    // determine scores
    for (B = 1 to 5)
    {
        L = Mat G [2, B];
        O = 5; Prog("WORDLSUB");
        if (L == Mat G [1, B])
        {
            // correct letter & place
            Mat G [3, B] = 2;
            S = S + 2;
            // mark the letter on board
            F_Line(B * D - 8, A * D - 8, B * D + 0, A * D - 8);
            F_Line(B * D + 0, A * D - 8, B * D + 0, A * D + 0);
            F_Line(B * D + 0, A * D + 0, B * D - 8, A * D + 0);
            F_Line(B * D - 8, A * D + 0, B * D - 8, A * D - 8);
            // mark the letter on keyboard
            F_Line(X - 2, Y - 2, X + 6, Y - 2);
            F_Line(X + 6, Y - 2, X + 6, Y + 6);
            F_Line(X + 6, Y + 6, X - 2, Y + 6);
            F_Line(X - 2, Y + 6, X - 2, Y - 2);
        }
        else
        {
            T = S;
            for (I = 1 to 5)
            {
                if (B != I and Mat G [3, I] == 0 and Mat G [2, I] != Mat G [1, I] and L == Mat G [1, I])
                {
                    // correct letter
                    Mat G [3, I] = 1;
                    S = S + 1;
                    // mark the letter on board
                    F_Line(B * D + 0, A * D + 0, B * D - 8, A * D + 0);
                    // mark the letter on keyboard
                    F_Line(X + 6, Y + 6, X - 2, Y + 6);
                    break;
                }
            }
            if (T == S)
            {
                // mark the letter on keyboard
                F_Line(X - 2, Y - 2, X + 6, Y + 6);
                F_Line(X + 6, Y - 2, X - 2, Y + 6);
            }
        }
    }
    return;
}

// set X, Y to keyboard for L 
if (O == 5)
{
    X = Intg(Frac((L - 1) / 5) * 5.01) * D + 79;
    Y = Intg((L - 1) / 5) * D + 4;
    return;
}

// draws a box on the graph screen
if (O == 6) {
    for (Y = 21 to 39 step 6) {
        Text(Y, 29, "                  ");
    }
    F_Line(30, 22, 98, 22);
    F_Line(30, 42, 98, 42);
    F_Line(30, 22, 30, 42);
    F_Line(98, 22, 98, 42);
    F_Line(31, 43, 99, 43);
    F_Line(99, 23, 99, 43);
    return;
}